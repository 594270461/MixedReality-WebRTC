# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See LICENSE in the project root for license information.

# MixedReality-WebRTC build pipeline for Release
# Build the core WebRTC implementation and the UWP wrappers

# Disable branch and PR triggers, the core implementation only changes
# when upgrading to a more recent version from Google, which is quite
# infrequent. Also this pipeline is very long (several hours) so should
# be triggered manually only when needed.
trigger: none
pr: none

# Give a unique name to the build each time it runs
# This is the value of $(Build.BuildNumber)
name: $(Date:yyyyMMdd)-$(Rev:r)

variables:
  # Version string is "$(MRWebRTCVersion)-$(MRWebRTCReleaseTag)-$(Build.BuildNumber)"
  MRWebRTCVersion: 0.0.1       # Major.Minor.Patch
  MRWebRTCReleaseTag: 'alpha'  # Optional, without '-'

stages:

# Compile all platform/architecture/config variants as separate jobs
# possibly in parallel if enough agents are available
- stage: build
  displayName: Build Core WebRTC
  jobs:
  - template: templates/jobs-libwebrtc-win32.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x86'
      buildConfig: 'Debug'
      withPdbs: true
  - template: templates/jobs-libwebrtc-win32.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x64'
      buildConfig: 'Debug'
      withPdbs: true
  - template: templates/jobs-libwebrtc-uwp.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x86'
      buildConfig: 'Debug'
      publishWinRtHeaders: true # Randomly selected, any UWP build will do
  - template: templates/jobs-libwebrtc-uwp.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x64'
      buildConfig: 'Debug'
  - template: templates/jobs-libwebrtc-uwp.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'ARM'
      buildConfig: 'Debug'
  # - template: templates/jobs-libwebrtc-uwp.yaml
  #   parameters:
  #     buildAgent: 'Analog Open'
  #     buildArch: 'ARM64'
  #     buildConfig: 'Debug'
  - template: templates/jobs-libwebrtc-win32.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x86'
      buildConfig: 'Release'
  - template: templates/jobs-libwebrtc-win32.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x64'
      buildConfig: 'Release'
  - template: templates/jobs-libwebrtc-uwp.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x86'
      buildConfig: 'Release'
  - template: templates/jobs-libwebrtc-uwp.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'x64'
      buildConfig: 'Release'
  - template: templates/jobs-libwebrtc-uwp.yaml
    parameters:
      buildAgent: 'Analog Open'
      buildArch: 'ARM'
      buildConfig: 'Release'
  # - template: templates/jobs-libwebrtc-uwp.yaml
  #   parameters:
  #     buildAgent: 'Analog Open'
  #     buildArch: 'ARM64'
  #     buildConfig: 'Release'

# Create signed NuGet packages
- stage: pack
  displayName: Create signed NuGet packages
  dependsOn: build
  jobs:
  - template: templates/jobs-libwebrtc-sign.yaml
    parameters:
      jobName: 'desktop'
      nugetPackage: 'Desktop'
      artifactSignConfig: ''
      nugetSignConfig: 'signconfig/nugetCoreDesktopSignConfig.xml'
      nuspecFile: 'nuspec/Microsoft.MixedReality.WebRTC.Native.Core.Desktop.nuspec'
  - template: templates/jobs-libwebrtc-sign.yaml
    parameters:
      jobName: 'uwp'
      nugetPackage: 'UWP'
      artifactSignConfig: ''
      nugetSignConfig: 'signconfig/nugetCoreUwpSignConfig.xml'
      nuspecFile: 'nuspec/Microsoft.MixedReality.WebRTC.Native.Core.UWP.nuspec'
  - template: templates/jobs-libwebrtc-sign.yaml
    parameters:
      jobName: 'uwp_x86'
      nugetPackage: 'UWP.x86'
      buildArch: 'x86'
      artifactSignConfig: 'signconfig/artifactsCoreUwpX86SignConfig.xml'
      nugetSignConfig: 'signconfig/nugetCoreUwpX86SignConfig.xml'
      nuspecFile: 'nuspec/Microsoft.MixedReality.WebRTC.Native.Core.UWP.x86.nuspec'
  - template: templates/jobs-libwebrtc-sign.yaml
    parameters:
      jobName: 'uwp_x64'
      nugetPackage: 'UWP.x64'
      buildArch: 'x64'
      artifactSignConfig: 'signconfig/artifactsCoreUwpX64SignConfig.xml'
      nugetSignConfig: 'signconfig/nugetCoreUwpX64SignConfig.xml'
      nuspecFile: 'nuspec/Microsoft.MixedReality.WebRTC.Native.Core.UWP.x64.nuspec'
  - template: templates/jobs-libwebrtc-sign.yaml
    parameters:
      jobName: 'uwp_arm'
      nugetPackage: 'UWP.ARM'
      buildArch: 'ARM'
      artifactSignConfig: 'signconfig/artifactsCoreUwpArmSignConfig.xml'
      nugetSignConfig: 'signconfig/nugetCoreUwpArmSignConfig.xml'
      nuspecFile: 'nuspec/Microsoft.MixedReality.WebRTC.Native.Core.UWP.ARM.nuspec'

# Publish everything
- stage: publish
  displayName: Publish NuGet packages
  dependsOn: pack
  jobs:

  # Publish the NuGet packages to an internal private feed
  - job: publish_internal
    timeoutInMinutes: 120
    pool:
      name: 'Analog On-Prem'
    steps:

    # Use NuGet 4.9.2
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 4.9.2'
      inputs:
        versionSpec: 4.9.2

    # Download all NuGet packages
    - task: DownloadPipelineArtifact@2
      displayName: 'Download nuget_core_desktop'
      inputs:
        artifactName: 'nuget_core_desktop'
        targetPath: '$(Build.ArtifactStagingDirectory)/signed'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download nuget_core_uwp'
      inputs:
        artifactName: 'nuget_core_uwp'
        targetPath: '$(Build.ArtifactStagingDirectory)/signed'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download nuget_core_uwp_x86'
      inputs:
        artifactName: 'nuget_core_uwp_x86'
        targetPath: '$(Build.ArtifactStagingDirectory)/signed'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download nuget_core_uwp_x64'
      inputs:
        artifactName: 'nuget_core_uwp_x64'
        targetPath: '$(Build.ArtifactStagingDirectory)/signed'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download nuget_core_uwp_arm'
      inputs:
        artifactName: 'nuget_core_uwp_arm'
        targetPath: '$(Build.ArtifactStagingDirectory)/signed'

    # Push all packages
    - powershell: |
        Set-Location $(Join-Path "$(Build.ArtifactStagingDirectory)" "signed")
        
        $files=Get-ChildItem | Where {$_.Name -like "*.nupkg" -and $_.Name -notlike "*symbols*"}
        foreach($file in $files)
        {
            # Use 900 seconds timeout instead of default 300 due to size of packages
            nuget push $file.Name -NonInteractive -Timeout 900 -Source $(InternalNuGetFeed) -ApiKey dummy -Verbosity Detailed
            if (-not $?)
            {
                throw "Failed to push $($file.Name)"
            }
        }
      displayName: 'NuGet push all Core*'

